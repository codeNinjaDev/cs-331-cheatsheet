# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
permissions:
  contents: write
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
    
      
      - uses: paulhatch/semantic-version@v5.0.2
        id: vnum
        with:
          tag_prefix: ""
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}-${increment}"
          bump_each_commit: true

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Compile LaTeX via latexmk
        # You may pin to the exact commit or the version.
        # uses: antaljanosbenjamin/compile-latex@9bd5857f8d3c1a7e448116c9be00be52f20d5cc4
        uses: antaljanosbenjamin/compile-latex@v1.0.0
        with:
          # The LaTeX file to be compiled, relative to the root of the repository.
          file: main.tex
          # Additional arguments to pass over to latexmk.
          args: -pdf
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: pdf
          # A file, directory or wildcard pattern that describes what to upload
          path: ./main.pdf
          retention-days: 31
          
      - name: Tag Release Upload
        # You may pin to the exact commit or the version.
        # uses: dothq/tag-and-release-and-upload@0c850593873e6958f9b0da120370fd301f53662d
        uses: dothq/tag-and-release-and-upload@v1.0.2
        with:
          # secrets.GITHUB_TOKEN, or a token with read/write access to the repo
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Version to create
          version: ${{ steps.vnum.outputs.version_tag }}
          # Name of release
          name: Release ${{ steps.vnum.outputs.version_tag }}
          # json string array of assets paths to upload to the release. E.G. '[ "win-x64.zip", "linux-x24.zip" ]'
          assets: '["main.pdf"]'
          # bool value to overwrite assets
          overwrite: true





      
